apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'jacoco'

buildscript {
    ext {
        kotlinVersion = '1.3.30'
    }
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    }
}

group 'com.github.seed'
version '1.0.0-SNAPSHOT'

jacoco {
    toolVersion = "0.8.3"
}

jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude:  [
                    'com/github/seed/RecordJson*.*',
                    'com/github/seed/RecordMap*.*'
            ])
        })
    }
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude:  [
                    'com/github/seed/RecordJson*.*',
                    'com/github/seed/RecordMap*.*'
            ])
        })
    }
    violationRules {
        rule {
            limit {
                minimum = 0.95
            }
        }
    }
}

jar {
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

repositories {
    mavenCentral()
    mavenLocal()
}
dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation('org.jetbrains.kotlin:kotlin-reflect')
    implementation('com.opencsv:opencsv:4.5')
    implementation("org.thymeleaf:thymeleaf:3.0.11.RELEASE")
    implementation('io.projectreactor:reactor-core:3.2.8.RELEASE')
    implementation('org.mongodb:mongodb-driver-reactivestreams:1.11.0')

    testImplementation('io.projectreactor:reactor-test:3.2.8.RELEASE')
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.4.1')
    testImplementation("io.kotlintest:kotlintest-runner-junit5:3.3.2")
    testImplementation("de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    finalizedBy jacocoTestCoverageVerification
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}
